@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@keyframes scroll {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

.skills-banner > div {
  animation: scroll 30s linear infinite;
}

.skills-banner:hover > div {
  animation-play-state: paused;
}

html {
  scroll-behavior: smooth;
}

@keyframes blink {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.animate-blink {
  animation: blink 1s infinite;
}

.overflow-hidden {
  overflow: hidden;
}

body {
  transition-property: opacity, transform, filter, background;
  transition-timing-function: ease-in-out;
  transition-duration: 200ms;
}

:root {
  --transition-color: #808080; /* Default gray - will be overridden */
  --transition-animation: slideInRightOutLeft; /* Default animation - will be overridden */
}

/* Page transition overlay effect */
body::after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--transition-color); /* Use the CSS variable */
  z-index: 9999; /* This remains the same */
  opacity: 0;
  pointer-events: none;
  visibility: hidden;
  /* Initial position is managed by the animations */
}

/* Horizontal animations */
@keyframes slideInRightOutLeft {
  0% {
    transform: translateX(100%);
    opacity: 1;
  }
  50% {
    transform: translateX(0);
    opacity: 1;
  }
  100% {
    transform: translateX(-100%);
    opacity: 1;
  }
}

@keyframes slideInLeftOutRight {
  0% {
    transform: translateX(-100%);
    opacity: 1;
  }
  50% {
    transform: translateX(0);
    opacity: 1;
  }
  100% {
    transform: translateX(100%);
    opacity: 1;
  }
}

/* Vertical animations */
@keyframes slideInTopOutBottom {
  0% {
    transform: translateY(-100%);
    opacity: 1;
  }
  50% {
    transform: translateY(0);
    opacity: 1;
  }
  100% {
    transform: translateY(100%);
    opacity: 1;
  }
}

@keyframes slideInBottomOutTop {
  0% {
    transform: translateY(100%);
    opacity: 1;
  }
  50% {
    transform: translateY(0);
    opacity: 1;
  }
  100% {
    transform: translateY(-100%);
    opacity: 1;
  }
}

/* Diagonal animations */
@keyframes slideInTopRightOutBottomLeft {
  0% {
    transform: translate(100%, -100%);
    opacity: 1;
  }
  50% {
    transform: translate(0, 0);
    opacity: 1;
  }
  100% {
    transform: translate(-100%, 100%);
    opacity: 1;
  }
}

@keyframes slideInBottomRightOutTopLeft {
  0% {
    transform: translate(100%, 100%);
    opacity: 1;
  }
  50% {
    transform: translate(0, 0);
    opacity: 1;
  }
  100% {
    transform: translate(-100%, -100%);
    opacity: 1;
  }
}

@keyframes slideInTopLeftOutBottomRight {
  0% {
    transform: translate(-100%, -100%);
    opacity: 1;
  }
  50% {
    transform: translate(0, 0);
    opacity: 1;
  }
  100% {
    transform: translate(100%, 100%);
    opacity: 1;
  }
}

@keyframes slideInBottomLeftOutTopRight {
  0% {
    transform: translate(-100%, 100%);
    opacity: 1;
  }
  50% {
    transform: translate(0, 0);
    opacity: 1;
  }
  100% {
    transform: translate(100%, -100%);
    opacity: 1;
  }
}

body.page-transition::after {
  visibility: visible;
  pointer-events: auto;
  animation: var(--transition-animation) 780ms ease-in-out forwards; /* Slowed down by 30% (from 600ms to 780ms) */
}

/* Remove the existing page-transition styles that we're replacing */
.page-transition {
  opacity: 1; /* Don't fade the content */
  background: transparent; /* Transparent background */
  transform: none; /* No transform on the content */
  filter: none; /* No blur */
}

@layer utilities {
  @keyframes floatUp {
    0% {
      transform: translateY(0);
      opacity: 0;
    }
    10% {
      opacity: 0.7; /* Start fading in */
    }
    90% {
      opacity: 0.7; /* Start fading out */
    }
    100% {
      /* Move slightly more than 100vh to ensure it goes off-screen */
      transform: translateY(calc(-100vh - 150px));
      opacity: 0;
    }
  }
  .animate-float {
    /* Apply the animation */
    animation: floatUp linear infinite;
  }

  /* Add pop animation */
  @keyframes pop {
    0% {
      transform: scale(1);
      opacity: 0.7;
    }
    50% {
      transform: scale(1.3); /* Expand */
      opacity: 0.3;
    }
    100% {
      transform: scale(0.5); /* Shrink */
      opacity: 0;
    }
  }
  .animate-pop {
    animation: pop 0.5s ease-out forwards; /* forwards keeps the final state */
    /* Ensure pop animation overrides float animation if both classes are present */
    animation-name: pop;
  }
}

/* Logo transition styles */
.transition-logo {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* Remove scale(0.5) */
  z-index: 20000; /* Increased z-index to ensure it's on top of the overlay and other elements */
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s; /* Remove transform from transition */
  pointer-events: none;
}

.transition-logo.active {
  opacity: 1;
  visibility: visible;
  /* Remove the transform scale change */
}

.logo-container {
  position: relative;
  width: 120px;
  height: 120px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.logo-text {
  position: relative;
  color: white;
  font-size: 36px;
  font-weight: bold;
  z-index: 1; /* Simplified z-index, relative to .transition-logo context, ensures text is above circle */
  font-family: sans-serif;
  letter-spacing: -1px;
}

.logo-circle {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0; /* Simplified z-index, relative to .transition-logo context, behind logo-text */
}

.logo-circle circle {
  fill: none;
  stroke: white;
  stroke-width: 5;
  stroke-dasharray: 283; /* Approx circumference */
  stroke-dashoffset: 283;
  animation: drawCircle 1s forwards;
}

@keyframes drawCircle {
  to {
    stroke-dashoffset: 0;
  }
}

.transition-logo.active .logo-circle circle {
  animation: drawCircle 1s forwards;
  animation-play-state: running;
}